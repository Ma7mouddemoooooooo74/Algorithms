#include <iostream>
using namespace std;

int kth_element(int *arr1, int *arr2, int *last1, int *last2, int k)
{
//Base Cases
//If length of one of the arrays is 0, the answer is kth element of the other array.
	if (arr1 == last1)
		return arr2[k];
	if (arr2 == last2)
		return arr1[k];

	int mid1 = (last1 - arr1)/2;
	int mid2 = (last2 - arr2)/2;

//If mid1+ mid2 is less than k:
//If mid1 is greater than mid2, we can ignore the first half of arr2,adjust k
//Otherwise,ignore the first half of arr1,adjust k

	if (mid1 + mid2 < k)
	{
		if (arr1[mid1] > arr2[mid2])
			return kth_element(arr1, arr2+mid2+1, last1, last2, k-mid2-1);
		else
			return kth_element(arr1+mid1+1, arr2, last1, last2, k-mid1-1);
	}

//Else If k is less than sum of mid1&2:
//If mid1 > mid2 we can ignore second half of arr1
//Otherwise, we can ignore second half of arr2

	else
	{
		if (arr1[mid1] > arr2[mid2])
			return kth_element(arr1, arr2, arr1 + mid1, last2, k);
		else
			return kth_element(arr1, arr2, last1, arr2 + mid2, k);
	}
}

int main()
{
	int arr1[5] = {100,112,256,349,770};
	int arr2[7] = {72,86,113,119,265,445,892};
    int k = 7;
	cout << kth_element(arr1,arr2,arr1+sizeof(arr1)/sizeof(arr1[0]),arr2+sizeof(arr2)/sizeof(arr2[0]),k-1);
	return 0;
}
